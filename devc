#!/bin/bash

set -e

if [[ ! -e .devcontainer ]]; then
  echo this repository does not have devcontainer configuration file.
  exit 1
fi

function up () {
  REMOVE_FLAG=""
  if [ "$1" = "true" ]; then
      REMOVE_FLAG="--remove-existing-container"
  fi

  # postCreateCommand で ssh が必要なものがあった場合エラーになってしまうので skip
  TARGET=$(devcontainer read-configuration | tail -n 1 | jq -r .workspace.workspaceFolder)
  devcontainer up ${REMOVE_FLAG} \
    --skip-post-create \
    --mount "type=bind,source=$(pwd),target=${TARGET}"
}

function exec () {
  # default command is bash
  CMD=${1:-bash}
  CONTAINER=$(devcontainer up | tail -n 1 | jq -r .containerId)

  # ssh auth socket を人力で bind mount する
  SOCK_FILE=$(devcontainer exec bash -c 'mktemp /tmp/devcontainer-cli-ssh-sock-XXXXXXX')
  CONTAINER_SOCK=$(docker inspect ${CONTAINER} | jq -r .[].GraphDriver.Data.MergedDir)${SOCK_FILE}

  sudo mount --bind ${SSH_AUTH_SOCK} ${CONTAINER_SOCK}

  docker exec -it -u vscode \
  	-e SSH_AUTH_SOCK=${SOCK_FILE} \
  	${CONTAINER} $CMD

  sudo umount ${CONTAINER_SOCK}
  sudo rm -f ${CONTAINER_SOCK}
}

function help() {
  echo "usage:"
  echo "  devc up [true] # if true, remove existing container"
  echo "  devc exec [cmd]"
}

if [[ "$1" = "up" ]]; then
  up
elif [[ "$1" = "exec" ]]; then
  exec
else
  help
fi
